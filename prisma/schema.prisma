generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// The available roles
enum Role {
  USER
  ADMIN
  SELLER
}

// test model for testing the issue
model TestImage {
  id  String @id @default(cuid())
  url String
  // user   User?   @relation(fields: [userId], references: [id])
  // userId String?
}

// The client model
model User {
  id                String  @id @default(cuid())
  email             String  @unique
  password          String
  isEmailVerified   Boolean @default(false)
  verificationToken String  @default(cuid())
  role              Role    @default(USER)
  orders            Order[]
  // textImages        TestImage[]

  @@unique([email, verificationToken])
}

model Order {
  id        String    @id @default(cuid())
  total     Float
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

// The Server model
model Category {
  id          String    @id @default(cuid())
  name        String    @db.VarChar(255)
  description String    @db.Text
  products    Product[]
}

model Product {
  id            String         @id @default(cuid())
  name          String         @db.VarChar(255)
  description   String         @db.Text
  price         Float
  thumbnail     String         @db.Text
  productImages ProductImage[]
  category      Category?      @relation(fields: [categoryId], references: [id])
  categoryId    String?
  Order         Order?         @relation(fields: [orderId], references: [id])
  orderId       String?
}

model ProductImage {
  id        String   @id @default(cuid())
  image     String   @db.Text
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
}
